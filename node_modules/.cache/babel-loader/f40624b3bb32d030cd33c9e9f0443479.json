{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar recompose_1 = require(\"recompose\");\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar operators_1 = require(\"rxjs/operators\"); // ProxeeHandler<T extends object, TOut extends object>\n\n\nvar makeWatchProxy = function makeWatchProxy(targetObject, subject$, watchProps) {\n  return new Proxy(targetObject, {\n    set: function set(target, name, value) {\n      var prevValue = target[name];\n      target[name] = value;\n\n      if (Array.isArray(watchProps) ? watchProps.includes(name) : name === watchProps) {\n        subject$.next({\n          name: name,\n          prevValue: prevValue,\n          newValue: value\n        });\n      }\n\n      return true;\n    },\n    get: function get(target, name) {\n      return target[name];\n    }\n  });\n};\n\nexports.ObjectWatcher = function (targetObject, watchProps) {\n  var observation$ = new rxjs_1.BehaviorSubject(null);\n  var proxy = makeWatchProxy(targetObject, observation$, watchProps);\n  return recompose_1.componentFromStream(function (props$) {\n    var change$ = rxjs_1.from(props$).pipe(operators_1.distinctUntilKeyChanged('onChange'), operators_1.switchMapTo(observation$, function (props, obs) {\n      props.onChange && obs && props.onChange(obs.newValue, obs.prevValue, obs.name);\n      return props;\n    }));\n    return rxjs_1.combineLatest(props$, observation$, change$, function (props, obs, _) {\n      return props.children ? props.children(proxy) : React.createElement(React.Fragment);\n    });\n  });\n};","map":{"version":3,"sources":["../src/ObjectWatcher.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,gBAAA,CAAA,C,CAuBA;;;AACA,IAAM,cAAc,GAClB,SADI,cACJ,CACE,YADF,EAEE,QAFF,EAGE,UAHF,EAG+B;AAE7B,SAAA,IAAI,KAAJ,CAAmB,YAAnB,EAAiC;AAC/B,IAAA,GAAG,EAAE,aAAC,MAAD,EAAkB,IAAlB,EAAgC,KAAhC,EAA0C;AAC7C,UAAM,SAAS,GAAG,MAAM,CAAC,IAAD,CAAxB;AACA,MAAA,MAAM,CAAC,IAAD,CAAN,GAAe,KAAf;;AAEA,UAAI,KAAK,CAAC,OAAN,CAAc,UAAd,IAA4B,UAAU,CAAC,QAAX,CAAoB,IAApB,CAA5B,GAAwD,IAAI,KAAK,UAArE,EAAiF;AAC/E,QAAA,QAAQ,CAAC,IAAT,CAAc;AAAE,UAAA,IAAI,EAAA,IAAN;AAAQ,UAAA,SAAS,EAAA,SAAjB;AAAmB,UAAA,QAAQ,EAAE;AAA7B,SAAd;AACD;;AACD,aAAO,IAAP;AACD,KAT8B;AAU/B,IAAA,GAAG,EAAE,aAAC,MAAD,EAAkB,IAAlB,EAA8B;AAAK,aAAA,MAAM,CAAN,IAAM,CAAN;AAAY;AAVrB,GAAjC,CAAA;AAWE,CAjBN;;AAoBa,OAAA,CAAA,aAAA,GACX,UAA4B,YAA5B,EAAmD,UAAnD,EAAgF;AAC9E,MAAM,YAAY,GAAG,IAAI,MAAA,CAAA,eAAJ,CAAyB,IAAzB,CAArB;AACA,MAAM,KAAK,GAAG,cAAc,CAAU,YAAV,EAAwB,YAAxB,EAAsC,UAAtC,CAA5B;AAEA,SAAO,WAAA,CAAA,mBAAA,CACL,UAAC,MAAD,EAA0C;AACxC,QAAM,OAAO,GAAG,MAAA,CAAA,IAAA,CAAK,MAAL,EAAa,IAAb,CACd,WAAA,CAAA,uBAAA,CAAwB,UAAxB,CADc,EAEd,WAAA,CAAA,WAAA,CAAY,YAAZ,EACE,UAAC,KAAD,EAAQ,GAAR,EAAW;AACT,MAAA,KAAK,CAAC,QAAN,IAAkB,GAAlB,IAAyB,KAAK,CAAC,QAAN,CAAe,GAAG,CAAC,QAAnB,EAA6B,GAAG,CAAC,SAAjC,EAA4C,GAAG,CAAC,IAAhD,CAAzB;AACA,aAAO,KAAP;AACD,KAJH,CAFc,CAAhB;AAUA,WAAO,MAAA,CAAA,aAAA,CACL,MADK,EAEL,YAFK,EAGL,OAHK,EAIL,UAAC,KAAD,EAA6B,GAA7B,EAA8C,CAA9C,EAAoD;AAClD,aAAA,KAAK,CAAC,QAAN,GAAiB,KAAK,CAAC,QAAN,CAAe,KAAf,CAAjB,GAAyC,KAAK,CAAC,aAAN,CAAoB,KAAK,CAAC,QAA1B,CAAzC;AAA4E,KALzE,CAAP;AAOD,GAnBI,CAAP;AAoBD,CAzBU","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar recompose_1 = require(\"recompose\");\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n// ProxeeHandler<T extends object, TOut extends object>\nvar makeWatchProxy = function (targetObject, subject$, watchProps) {\n    return new Proxy(targetObject, {\n        set: function (target, name, value) {\n            var prevValue = target[name];\n            target[name] = value;\n            if (Array.isArray(watchProps) ? watchProps.includes(name) : name === watchProps) {\n                subject$.next({ name: name, prevValue: prevValue, newValue: value });\n            }\n            return true;\n        },\n        get: function (target, name) { return target[name]; },\n    });\n};\nexports.ObjectWatcher = function (targetObject, watchProps) {\n    var observation$ = new rxjs_1.BehaviorSubject(null);\n    var proxy = makeWatchProxy(targetObject, observation$, watchProps);\n    return recompose_1.componentFromStream(function (props$) {\n        var change$ = rxjs_1.from(props$).pipe(operators_1.distinctUntilKeyChanged('onChange'), operators_1.switchMapTo(observation$, function (props, obs) {\n            props.onChange && obs && props.onChange(obs.newValue, obs.prevValue, obs.name);\n            return props;\n        }));\n        return rxjs_1.combineLatest(props$, observation$, change$, function (props, obs, _) {\n            return props.children ? props.children(proxy) : React.createElement(React.Fragment);\n        });\n    });\n};\n//# sourceMappingURL=ObjectWatcher.js.map"]},"metadata":{},"sourceType":"script"}