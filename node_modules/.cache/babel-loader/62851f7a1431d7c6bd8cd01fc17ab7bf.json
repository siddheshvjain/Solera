{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar recompose_1 = require(\"recompose\");\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nexports.AsyncResolver = function (distinctKey, initialProps) {\n  if (distinctKey === void 0) {\n    distinctKey = 'subject';\n  }\n\n  return recompose_1.componentFromStream(function (props$) {\n    var subject$ = rxjs_1.from(props$).pipe(operators_1.distinctUntilKeyChanged(distinctKey), operators_1.flatMap(function (props) {\n      return props.subject(props);\n    }), operators_1.startWith(initialProps));\n    return rxjs_1.combineLatest(props$, subject$, function (props, subject) {\n      return props.children(subject);\n    });\n  });\n};","map":{"version":3,"sources":["../src/AsyncResolver.ts"],"names":[],"mappings":";;;;;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAiBa,OAAA,CAAA,aAAA,GACX,UAA4B,WAA5B,EAA6D,YAA7D,EAAkF;AAAtD,MAAA,WAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,SAAA;AAA+B;;AACzD,SAAA,WAAA,CAAA,mBAAA,CACA,UAAC,MAAD,EAAO;AACL,QAAM,QAAQ,GAAG,MAAA,CAAA,IAAA,CAAK,MAAL,EACd,IADc,CAEb,WAAA,CAAA,uBAAA,CAAwB,WAAxB,CAFa,EAGb,WAAA,CAAA,OAAA,CAAQ,UAAC,KAAD,EAAwD;AAAK,aAAA,KAAK,CAAC,OAAN,CAAA,KAAA,CAAA;AAAoB,KAAzF,CAHa,EAIb,WAAA,CAAA,SAAA,CAAU,YAAV,CAJa,CAAjB;AAOA,WAAO,MAAA,CAAA,aAAA,CACL,MADK,EAEL,QAFK,EAGL,UAAC,KAAD,EAAyD,OAAzD,EAAwE;AACtE,aAAA,KAAK,CAAC,QAAN,CAAe,OAAf,CAAA;AAAuB,KAJpB,CAAP;AAMD,GAfD,CAAA;AAeE,CAjBO","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar recompose_1 = require(\"recompose\");\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nexports.AsyncResolver = function (distinctKey, initialProps) {\n    if (distinctKey === void 0) { distinctKey = 'subject'; }\n    return recompose_1.componentFromStream(function (props$) {\n        var subject$ = rxjs_1.from(props$)\n            .pipe(operators_1.distinctUntilKeyChanged(distinctKey), operators_1.flatMap(function (props) { return props.subject(props); }), operators_1.startWith(initialProps));\n        return rxjs_1.combineLatest(props$, subject$, function (props, subject) {\n            return props.children(subject);\n        });\n    });\n};\n//# sourceMappingURL=AsyncResolver.js.map"]},"metadata":{},"sourceType":"script"}